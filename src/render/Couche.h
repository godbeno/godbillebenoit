// Generated by dia2code
#ifndef RENDER__COUCHE__H
#define RENDER__COUCHE__H

#include <vector>
#include <SFML/Graphics.hpp>

namespace render {
  class Tuile;
};
namespace state {
  class Observateur;
}

#include "state/Observateur.h"
#include "Tuile.h"

namespace render {

  /// class Couche - 
  class Couche : public state::Observateur {
    // Associations
    // Attributes
  private:
    std::vector<Tuile*> tuiles;
    sf::RenderWindow* window;
    /// 		
    std::vector<sf::RectangleShape> brillance;
    sf::RectangleShape* select;
    std::vector<sf::RectangleShape> rouge;
    sf::Text degat;
    sf::Font font;
    bool estDegat;
    // Operations
  public:
    Couche (sf::RenderWindow* window);
    virtual ~Couche ();
    Tuile* getTuile (float i, float j, float incr);
    void setTuile (int i, int j, Tuile* tuile);
    void changementEtat (state::EvenementEtat& e);
    void afficher ();
    void addTuile (Tuile* tuile);
    void setSurbrillance (int x, int y, float tx);
    void deplacerCamera (float x, float y);
    void zoomCamera (float s);
    void unsetSurbrillance ();
    void setSelectionne (int x, int y, float tx);
    void unsetSelectionne ();
    void setRouge (int x, int y, float tx);
    void unsetRouge ();
    void setDegat (float x, float y, int nbDegat);
    void monterDegat ();
    void stopDegat ();
  };

};

#endif
